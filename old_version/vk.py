# -- coding: utf-8 --

import asyncio
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import vk_api
from datetime import datetime
import random
import json
import time
import sqlite3




print('')
print('-------------------------------')
print('  –°–∫—Ä–∏–ø—Ç –ë–æ—Ç –Æ—Ç—É–±–µ—Ä –∑–∞–ø—É—â–µ–Ω.')
print('  –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –ö–∏—Ä–∏–ª–ª –ê—Ä–∑–∞–º–∞—Å—Ü–µ–≤ ')
print('  https://vk.com/kirillarz')

print('-------------------------------')
print('')



# –≤–ø–∏—Å—ã–≤–∞–µ–º —Å–≤–æ–π —Ç–æ–∫–µ–Ω
token = "1b464e0c8f92ffaef1fa2b921bdd396d2062014bef32657eb1e7b62aa0d4fb36a2555fb5e6383cbadcfc4"
vk_session = vk_api.VkApi(token=token)

# —Ç–∏–ø –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
session_api = vk_session.get_api()
longpoll    = VkLongPoll(vk_session)


###################################################################################################
#vk.method('wall.post', {                                                                         ##
#           'owner_id': OWNER_ID,                                                                ##
#          'message': '–•–µ–π!',                                                                   ##
#            'attachments': href,                                                                 ##
#        })                                                                                       ##
###################################################################################################



# ```````````````````````````````````````–°–û–ó–î–ê–ï–ú –í–°–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï`````````````````````````````````````````````````````
users_id    = []
inventory   = {}
balance     = {}
nicks       = {}
admins      = {}
cities      = {}
inventory   = {}
check_start = {} # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ä—Ç –≤ –Ω–∞—á–∞–ª–µ
id_admin    = 457641188
photo       = None
# –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
greetings = ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥–∞—Ä–æ–≤–∞', '–∫—É', '—Å–∞–ª–∞–º', 'hi', '—Ö–∞–π', '–±–æ–Ω–∂—É—Ä', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ','–¥–æ–±—Ä—ã–π –¥–µ–Ω—å', '–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä','–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ', '—Å–∞–ª—é—Ç','–ø—Ä–∏–≤–µ—Ç–∏–∫'] 
# —Å–º–∞–π–ª–∏–∫–∏
smiles = ['üòÄ','üòÉ','üòÑ','üòÅ','üòÜ','üòÖ','üòÇ','ü§£','‚ò∫','üòä','üòá','üôÇ','üôÉ','üòâ','üòå','üòú','üòù','ü§ë','ü§°','ü•≥','ü§©''üòé','ü§ì','üßê','ü§®','ü§†','üòè','ü•∫','üòë','üòê','üòØ','üò¶','üòß','üòÆ','ü•±','üòµ','üò≥','üò±','üò®','üò∞','üò∑','ü§ß','ü§Æ','ü•¥','ü§ï','ü§í','üëø','üòà','üëª','üíÄ','üí©','üë∫','üëΩ','üë®‚Äçüíª']
rotateWord = {
    ' ': ' ',
    'q': 'q',
    'w': ' ç',
    'e': '«ù',
    'r': '…π',
    't': ' á',
    'y': ' é',
    'u': 'u',
    'i': '·¥â',
    'o': 'o',
    'p': 'p',
    'a': '…ê',
    's': 's',
    'd': 'd',
    'f': '…ü',
    'g': '∆É',
    'h': '…•',
    'j': '…æ',
    'k': ' û',
    'l': 'l',
    'z': 'z',
    'x': 'x',
    'c': '…î',
    'v': ' å',
    'b': 'b',
    'n': 'n',
    'm': '…Ø',

    '–π': '≈Ü',
    '—Ü': '«π',
    '—É': ' é',
    '–∫': ' û',
    '–µ': '«ù',
    '–Ω': '–Ω',
    '–≥': '…π',
    '—à': 'm',
    '—â': 'm',
    '–∑': 'Œµ',
    '—Ö': '—Ö',
    '—ä': 'q',
    '—Ñ': '—Ñ',
    '—ã': 'ƒ±q',
    '–≤': ' ö',
    '–∞': '…ê',
    '–ø': 'u',
    '—Ä': 'd',
    '–æ': '–æ',
    '–ª': 'v',
    '–¥': '…ì',
    '–∂': '–∂',
    '—ç': '—î',
    '—è': ' Å',
    '—á': '“ª',
    '—Å': '…î',
    '–º': 'w',
    '–∏': '–∏',
    '—Ç': '…Ø',
    '—å': 'q',
    '–±': '∆ç',
    '—é': 'oƒ±'
}

translateWord = { 
    'q': '–π',
    'w': '—Ü',
    'e': '—É',
    'r': '–∫',
    't': '–µ',
    'y': '–Ω',
    'u': '–≥',
    'i': '—à',
    'o': '—â',
    'p': '–∑',
    '[': '—Ö',
    ']': '—ä',
    'a': '—Ñ',
    's': '—ã',
    'd': '–≤',
    'f': '–∞',
    'g': '–ø',
    'h': '—Ä',
    'j': '–æ',
    'k': '–ª',
    'l': '–¥',
    ';': '–∂',
    "'": '—ç',
    'z': '—è',
    'x': '—á',
    'c': '—Å',
    'v': '–º',
    'b': '–∏',
    'n': '—Ç',
    'm': '—å',
    ',': '–±',
    '.': '—é',
    '/': '.',
    ' ': ' ',
    '1': '1',
    '2': '2',
    '3': '3',
    '4': '4',
    '5': '5',
    '6': '6',
    '7': '7',
    '8': '8',
    '9': '9',
    '0': '0',
    '-': '-',
    '=': '='
}



#`````````````````````````````````````````````````````````````````````````````````````````````````````````````````
#```````````````````````````````````````````````–î–ï–†–ï–í–ù–Ø```````````````````````````````````````````````````````````
#`````````````````````````````````````````````````````````````````````````````````````````````````````````````````
cameras_rodnayaDerevnya = {
    'NoName Webcam rev. 1.0': {'cost': 75, 'gain': 0.0001, 'photo': 'photo-198179933_457239079'},
    'NoName Webcam rev. 2.0': {'cost': 125, 'gain': 0.0005, 'photo': 'photo-198179933_457239080'},
    'NoName Webcam rev. 3.0': {'cost': 200, 'gain': 0.001, 'photo': 'photo-198179933_457239081'},
    'CBR CW-835M': {'cost': 300, 'gain': 0.005, 'photo': 'photo-198179933_457239082'},
    'NoName Webcam rev. 4.0': {'cost': 450, 'gain': 0.01, 'photo': 'photo-198179933_457239083'},
    'CBR CW 840M': {'cost': 650, 'gain': 0.05, 'photo': 'photo-198179933_457239084'},
    'Banggood CMOS 50M': {'cost': 850, 'gain': 0.1, 'photo': 'photo-198179933_457239085'},
    'Defender C-090': {'cost': 1100, 'gain': 0.4, 'photo': 'photo-198179933_457239086'},
    'GRES electroniks': {'cost': 1400, 'gain': 0.7, 'photo': 'photo-198179933_457239087'}
}


microphone_rodnayaDerevnya = {
    'CD-2000': {'cost': 75, 'gain': 0.0001, 'photo': 'photo-198179933_457239129'},
    'Sven MK-150': {'cost': 125, 'gain': 0.0005, 'photo': 'photo-198179933_457239130'},
    'MIC-109 Defender': {'cost': 200, 'gain': 0.001, 'photo': 'photo-198179933_457239131'},
    'MIC-117 Defender': {'cost': 300, 'gain': 0.005, 'photo': 'photo-198179933_457239132'},
    'Sven MK-205': {'cost': 450, 'gain': 0.01, 'photo': 'photo-198179933_457239133'},
    'Aceline AMIC-30': {'cost': 650, 'gain': 0.05, 'photo': 'photo-198179933_457239134'},
    'Ritmix RDM-125': {'cost': 850, 'gain': 0.1, 'photo': 'photo-198179933_457239135'},
    'BEHRINGER C-1U': {'cost': 1100, 'gain': 0.4, 'photo': 'photo-198179933_457239136'},
    'Trust GTX 232 Mantis': {'cost': 1400, 'gain': 0.7, 'photo': 'photo-198179933_457239137'}
    #'DM800': {'cost': 2000, 'gain': 1.0, 'photo': 'photo-198179933_457239138'}
}


keyboard_rodnayaDerevnya = {
    'NoName keyboard rev. 1.0': {'cost': 75, 'gain': 0.0001, 'photo': 'photo-198179933_457239088'},
    'NoName keyboard rev. 2.0': {'cost': 125, 'gain': 0.0005, 'photo': 'photo-198179933_457239089'},
    'Oklick 120M': {'cost': 200, 'gain': 0.001, 'photo': 'photo-198179933_457239090'},
    'ExeGate LY-403': {'cost': 300, 'gain': 0.005, 'photo': 'photo-198179933_457239091'},
    'Defender HB-420': {'cost': 450, 'gain': 0.01, 'photo': 'photo-198179933_457239092'},
    'Perfeo PF-8801': {'cost': 650, 'gain': 0.05, 'photo': 'photo-198179933_457239093'},
    '–ì–∞—Ä–Ω–∏–∑–æ–Ω GK-100': {'cost': 850, 'gain': 0.1, 'photo': 'photo-198179933_457239094'},
    'Ritmix RKB-151': {'cost': 1100, 'gain': 0.4, 'photo': 'photo-198179933_457239095'},
    'Smartbuy SBK-221U-K': {'cost': 1400, 'gain': 0.7, 'photo': 'photo-198179933_457239096'}
}


mouse_rodnayaDerevnya = {
    'Partner Precise CM-010': {'cost': 75, 'gain': 0.0001, 'photo': 'photo-198179933_457239098'},
    'Limeide XF-240': {'cost': 125, 'gain': 0.0005, 'photo': 'photo-198179933_457239099'},
    'Patch MS-759': {'cost': 200, 'gain': 0.001, 'photo': 'photo-198179933_457239100'},
    'Ritmix ROM-111': {'cost': 300, 'gain': 0.005, 'photo': 'photo-198179933_457239101'},
    'Optimum MB-160': {'cost': 450, 'gain': 0.01, 'photo': 'photo-198179933_457239102'},
    'Oklick 115S': {'cost': 650, 'gain': 0.05, 'photo': 'photo-198179933_457239103'},
    'Oklick 225M': {'cost': 850, 'gain': 0.1, 'photo': 'photo-198179933_457239104'},
    'Defender Optimum MB-270': {'cost': 1100, 'gain': 0.4, 'photo': 'photo-198179933_457239105'},
    'Ritmix WM-984': {'cost': 1400, 'gain': 0.7, 'photo': 'photo-198179933_457239106'}
}


monitor_rodnayaDerevnya = {
    'LG Flatron 1400x': {'cost': 550, 'gain': 1, 'photo': 'photo-198179933_457239107'},
    'SAMSUNG SperMonitor 720x': {'cost': 900, 'gain': 4, 'photo': 'photo-198179933_457239108'},
    'LG flatron ez T710BH': {'cost': 1650, 'gain': 7, 'photo': 'photo-198179933_457239109'},
    'PHILIPS wb 107': {'cost': 2000, 'gain': 7.5, 'photo': 'photo-198179933_457239110'},
    'LG flatron F700P': {'cost': 3100, 'gain': 10, 'photo': 'photo-198179933_457239111'},
    'ViewSonic T927VI': {'cost': 3700, 'gain': 11.1, 'photo': 'photo-198179933_457239112'},
    'SAMSUNG SperMonitor x875': {'cost': 4500, 'gain': 18, 'photo': 'photo-198179933_457239113'},
    'LG flatron F967K': {'cost': 6000, 'gain': 23, 'photo': 'photo-198179933_457239115'},
    'Acer v173': {'cost': 8100, 'gain': 28.88888, 'photo': 'photo-198179933_457239116'}
}















#`````````````````````````````````````````````````````````````````````````````````````````````````````````````````
#```````````````````````````````````````````````–ß–ï–õ–Ø–ë–ò–ù–°–ö```````````````````````````````````````````````````````````
#`````````````````````````````````````````````````````````````````````````````````````````````````````````````````



cameras_—Åhelyabinsk = {
    'ExeGate BlackView C310': {'cost': 2000, 'gain': 1, 'photo': 'photo-198179933_457239118'},
    'Logitech QuickCam Deluxe': {'cost': 2200, 'gain': 1.01, 'photo': 'photo-198179933_457239119'},
    'Trust Exis Webcam': {'cost': 2700, 'gain': 1.04, 'photo': 'photo-198179933_457239121'},
    'ExeGate BusinessPro C922 HD': {'cost': 3000, 'gain': 1.05, 'photo': 'photo-198179933_457239122'},
    'Canyon CNE-CWC1': {'cost': 4285, 'gain': 1.75, 'photo': 'photo-198179933_457239123'},
    'Genius FaceCam 1000X HD': {'cost': 4999, 'gain': 2, 'photo': 'photo-198179933_457239124'},
    'Trust SpotLight Webcam Pro': {'cost': 5439, 'gain': 2.3333, 'photo': 'photo-198179933_457239126'},
    'WZ1': {'cost': 6199, 'gain': 2.63, 'photo': 'photo-198179933_457239127'},
    'Logitech QuickCam Communicate Delux': {'cost': 6700, 'gain': 2.9991, 'photo': 'photo-198179933_457239125'}
}


microphone_—Åhelyabinsk = {
    'Ritmix RDM-130': {'cost': 2000, 'gain': 0.8, 'photo': 'photo-198179933_457239139'},
    'DM800': {'cost': 2200, 'gain': 1.0, 'photo': 'photo-198179933_457239138'},
    'BBK CM110': {'cost': 2700, 'gain': 1.01, 'photo': 'photo-198179933_457239140'},
    'Ritmix RDM-131': {'cost': 3000, 'gain': 1.04, 'photo': 'photo-198179933_457239141'},
    'BLAST BAM-101': {'cost': 4285, 'gain': 1.05, 'photo': 'photo-198179933_457239142'},
    'BBK CM215': {'cost': 4999, 'gain': 1.75, 'photo': 'photo-198179933_457239143'},
    'BBK CM132': {'cost': 5439, 'gain': 2, 'photo': 'photo-198179933_457239145'},
    'Trust GXT 239 Nepa': {'cost': 6199, 'gain': 2.3333, 'photo': 'photo-198179933_457239146'},
    'WSTER WS-858': {'cost': 6700, 'gain': 2.63, 'photo': 'photo-198179933_457239144'}
}


keyboard_—Åhelyabinsk = {
    'ExeGate LY-331L2': {'cost': 2000, 'gain': 0.8, 'photo': 'photo-198179933_457239147'},
    'Dialog KS-030P': {'cost': 2200, 'gain': 1, 'photo': 'photo-198179933_457239148'},
    'ExeGate LY-403': {'cost': 2700, 'gain': 1.01, 'photo': 'photo-198179933_457239149'},
    'Gembird KB-G530L': {'cost': 3000, 'gain': 1.04, 'photo': 'photo-198179933_457239150'},
    'Logitech Wireless Combo MK240': {'cost': 4285, 'gain': 1.05, 'photo': 'photo-198179933_457239151'},
    'A4 Tech KV-300H': {'cost': 4999, 'gain': 1.75, 'photo': 'photo-198179933_457239152'},
    'Logitech Keyboard K120': {'cost': 5439, 'gain': 2, 'photo': 'photo-198179933_457239153'},
    'Redragon Shiva': {'cost': 6199, 'gain': 2.33333, 'photo': 'photo-198179933_457239154'},
    'Red Square Tesla TKL RGB': {'cost': 6700, 'gain': 2.63, 'photo': 'photo-198179933_457239155'}
}


mouse_—Åhelyabinsk = {
    '': {'cost': 75, 'gain': 0.0001, 'photo': 'photo-198179933_457239098'},
    '': {'cost': 125, 'gain': 0.0005, 'photo': 'photo-198179933_457239099'},
    '': {'cost': 200, 'gain': 0.001, 'photo': 'photo-198179933_457239100'},
    '': {'cost': 300, 'gain': 0.005, 'photo': 'photo-198179933_457239101'},
    '': {'cost': 450, 'gain': 0.01, 'photo': 'photo-198179933_457239102'},
    '': {'cost': 650, 'gain': 0.05, 'photo': 'photo-198179933_457239103'},
    '': {'cost': 850, 'gain': 0.1, 'photo': 'photo-198179933_457239104'},
    '': {'cost': 1100, 'gain': 0.4, 'photo': 'photo-198179933_457239105'},
    '': {'cost': 1400, 'gain': 0.7, 'photo': 'photo-198179933_457239106'}
}


monitor_—Åhelyabinsk = {
    '': {'cost': 550, 'gain': 1, 'photo': 'photo-198179933_457239107'},
    '': {'cost': 900, 'gain': 4, 'photo': 'photo-198179933_457239108'},
    '': {'cost': 1650, 'gain': 7, 'photo': 'photo-198179933_457239109'},
    '': {'cost': 2000, 'gain': 7.5, 'photo': 'photo-198179933_457239110'},
    '': {'cost': 3100, 'gain': 10, 'photo': 'photo-198179933_457239111'},
    '': {'cost': 3700, 'gain': 11.1, 'photo': 'photo-198179933_457239112'},
    '': {'cost': 4500, 'gain': 18, 'photo': 'photo-198179933_457239113'},
    '': {'cost': 6000, 'gain': 23, 'photo': 'photo-198179933_457239115'},
    '': {'cost': 8100, 'gain': 28.88888, 'photo': 'photo-198179933_457239116'}
}


# `````````````````````````````````````````````````````````````````````````````````````````````````````````````````````














# —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
keyboard = {"buttons":[],"one_time":True}

keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
keyboard = str(keyboard.decode('utf-8'))






# ````````````````````````````````````–í–°–ï –§–£–ù–ö–¶–ò–ò```````````````````````````````````:
# —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
def save(name, what):
    file = open(str(name), "w", encoding='utf-8')
    what = str(what)
    file.write( what )
    file.close()




# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –í–ö, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
def upload_photo(x):
    global photo

    uploader = vk_api.upload.VkUpload(vk_session)
    img = uploader.photo_messages(x)
    media_id = str(img[0]['id'])
    owner_id = str(img[0]['owner_id'])
    photo = 'photo' + owner_id + '_' + media_id





# –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
def send(id, text):
    vk_session.method('messages.send', {'user_id': id, 'message': text , 'keyboard' : keyboard , 'attachment' : photo , 'random_id': 0})




# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
async def mailing(msg):
    if admins[id] == 'yes':
        text = msg[9 : ]
        for i in users_id:
            send(i, text)
    else:
        send(id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')




async def nick():
    global photo

    photo = None
    send(id, "üôÉ–ö–∞–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ —Ç—ã —Ö–æ—á–µ—à—å?")

    for event in longpoll.listen():

        await asyncio.sleep(0.5)

        if event.type == VkEventType.MESSAGE_NEW:
            if event.from_user and not event.from_me:
                msg = event.text
                if id == event.user_id:
                        send(id, '–¢—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª –Ω–∏–∫ –Ω–∞ "' + msg + '"!')
                        nicks[id] = msg

                        break




async def gm():
    global keyboard

    if cities[id] == '—Ä–æ–¥–Ω–∞—è –¥–µ—Ä–µ–≤–Ω—è':

        keyboard = {
            "one_time": True,
            "buttons": [
                [{
                        "action": {
                            "type": "text",
                            "label": "–ú–∞–≥–∞–∑–∏–Ω"
                        },
                        "color": "secondary"
                    },
                    {
                        "action": {
                            "type": "text",
                            "label": "–†–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ"
                        },
                        "color": "secondary"
                    },
                    {
                        "action": {
                            "type": "text",
                            "label": "–î—É–±–ª—å –∫–∞—Ä—Ç—ã"
                        },
                        "color": "secondary"
                    }],
                    [{
                        "action": {
                            "type": "text",
                            "label": "–ü—Ä–æ—Ñ–∏–ª—å"
                        },
                        "color": "primary"
                    },
                    {
                        "action": {
                            "type": "text",
                            "label": "‚öô"
                        },
                        "color": "primary"
                    }
                ]
            ]
        }

        keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
        keyboard = str(keyboard.decode('utf-8'))

        photo = None


        await send(id, random.choice(smiles) + random.choice(greetings) + ' ' + str(nicks[id]) + ', —Ç—ã —Å–µ–π—á–∞—Å –≤  –ø–æ—Å–µ–ª–µ–Ω–∏–∏ "' + cities[id] + '! \nüí∞–ë–∞–ª–∞–Ω—Å: '+str(balance[id]))
    else:

        keyboard = {
            "one_time": True,
            "buttons": [
                [{
                        "action": {
                            "type": "text",
                            "label": "–ú–∞–≥–∞–∑–∏–Ω"
                        },
                        "color": "secondary"
                    },
                    {
                        "action": {
                            "type": "text",
                            "label": "–†–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ"
                        },
                        "color": "secondary"
                    },
                    {
                        "action": {
                            "type": "text",
                            "label": "–î—É–±–ª—å –∫–∞—Ä—Ç—ã"
                        },
                        "color": "secondary"
                    }],
                    [{
                        "action": {
                            "type": "text",
                            "label": "–ü—Ä–æ—Ñ–∏–ª—å"
                        },
                        "color": "primary"
                    },
                    {
                        "action": {
                            "type": "text",
                            "label": "‚öô"
                        },
                        "color": "primary"
                    }
                ]
            ]
        }

        keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
        keyboard = str(keyboard.decode('utf-8'))

        photo = None


        await send(id, random.choice(smiles) + random.choice(greetings) + ' ' + str(nicks[id]) + ', —Ç—ã —Å–µ–π—á–∞—Å –≤  –≥–æ—Ä–æ–¥–µ "' + cities[id] + '"! \nüí∞–ë–∞–ª–∞–Ω—Å: '+str(balance[id]))











async def rotateText(x):
    x = x[10:]    # —Å—Ä–µ–∑–∞–µ–º —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ
    y = len(x)    # –≤—ã—á–∏—Ç–∞–µ–º –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –µ–≥–æ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å
    x = x[y: :-1] # –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ —Ö
    text = ''     # –æ–±–æ–∑–∞—á–∞–µ–º —Ç–æ, —á—Ç–æ —Ç–µ–∫—Å—Ç-—Å—Ç—Ä–æ–∫–∞
    for i in x:
        if i in rotateWord:      # –µ—Å–ª–∏ –±—É–∫–≤–∞ –µ—Å—Ç—å –≤ –Ω–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ
            word = rotateWord[i] # –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –±—É–∫–≤—É –ø–æ —É
            text += word         # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –±—É–∫–≤—É –≤ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π –ø–æ —Ö –∏ —É —Ç–µ–∫—Å—Ç
        else:
            send(id, '–•–º–º–º–º–º! –°–∏–º–≤–æ–ª–∞ "'+i+'" –Ω–µ—Ç –≤ –º–æ–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ. –ü–æ—ç—Ç–æ–º—É –ø—Ä–æ–ø—É—â—É –µ–≥–æ!') # –µ—Å–ª–∏ —Å–∏–º–≤–æ–ª–∞ –Ω–µ—Ç –≤ –Ω–∞—à–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
    send(id, text) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏–≥—Ä–æ–∫—É




async def translateText(x):
    x = x.lower()
    text = ''     # –æ–±–æ–∑–∞—á–∞–µ–º —Ç–æ, —á—Ç–æ —Ç–µ–∫—Å—Ç-—Å—Ç—Ä–æ–∫–∞
    for i in x:
        if i in translateWord:      # –µ—Å–ª–∏ –±—É–∫–≤–∞ –µ—Å—Ç—å –≤ –Ω–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ
            word = translateWord[i] # –∑–∞–º–µ–Ω—è–µ–º inglish –±—É–∫–≤—É –Ω–∞ —Ä—É—Å—Å–∫—É—é
            text += word         # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –±—É–∫–≤—É –≤ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π –ø–æ —Ö –∏ —É —Ç–µ–∫—Å—Ç
        else:
            send(id, '–•–º–º–º–º–º! –°–∏–º–≤–æ–ª–∞ "'+i+'" –Ω–µ—Ç –≤ –º–æ–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ. –ü–æ—ç—Ç–æ–º—É –ø—Ä–æ–ø—É—â—É –µ–≥–æ!') # –µ—Å–ª–∏ —Å–∏–º–≤–æ–ª–∞ –Ω–µ—Ç –≤ –Ω–∞—à–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
            send(id_admin, '–î–æ–±–∞–≤—å —Å–∏–º–≤–æ–ª "' + str(i) + '" –≤ —Ñ—É–Ω–∫—Ü–∏—é translateText')
    send(id, text) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏–≥—Ä–æ–∫—É







def stopWatch(value):
    '''From seconds to Days;Hours:Minutes;Seconds'''

    valueD = (((value/365)/24)/60)
    Days = int (valueD)

    valueH = (valueD-Days)*365
    Hours = int(valueH)

    valueM = (valueH - Hours)*24
    Minutes = int(valueM)

    valueS = (valueM - Minutes)*60
    Seconds = int(valueS)


    return Seconds






async def starting():
    if id not in users_id:
        upload_photo('17-kak-stat-populyarnym-na-youtube.jpg')
        start_text = '–û–¥–Ω–∏–º –æ–±—ã—á–Ω—ã–º, —Å–∫—É—á–Ω—ã–º –≤–µ—á–µ—Ä–æ–º, —Ç—ã —Å–º–æ—Ç—Ä—è —Å–≤–æ–∏—Ö –ª—é–±–∏–º—ã—Ö –±–ª–æ–≥–µ—Ä–æ–≤, –¥—É–º–∞–ª –æ —Ç–æ–º, –∫–∞–∫ –º–Ω–æ–≥–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–µ —É–≥—Ä–æ–±—è –ø—Ä–∏ —ç—Ç–æ–º –ø–æ–ª –∂–∏–∑–Ω–∏, –æ–±—É—á–∞—è—Å—å, –∫–∞–∫ –≤–¥—Ä—É–≥ –∫ —Ç–µ–±–µ –ø—Ä–∏—à–ª–∞ –∏–¥–µ—è: "–∞ –ø–æ—á–µ–º—É –º–Ω–µ —Å–∞–º–æ–º—É –Ω–µ —Å—Ç–∞—Ç—å —é—Ç—É–±–µ—Ä–æ–º?". –° —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –Ω–∞—á–∞–ª—Å—è —Ç–≤–æ–π –¥–æ–ª–≥–∏–π, –Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø—É—Ç—å –∫ —Å–ª–∞–≤–µ...'
        send(id, start_text)
        await asyncio.sleep(7)

        upload_photo('thinking-face-facebook.png')
        send(id, 'ü§î–ò—Ç–∞–∫... –¢–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–∏–¥—É–º–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞ (–Ω–∏–∫). –í—ã–±–∏—Ä–∞–π —Ö–æ—Ä–æ—à–æ, —Ç–∞–∫ –∫–∞–∫ —á–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–µ–π –±—É–¥–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ - —Ç–µ–º —Ç—ã –±—É–¥–µ—à—å –ø–æ–ø—É–ª—è—Ä–Ω–µ–π! \n‚öô–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç —Ç—ã –º–æ–∂–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å –µ–≥–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.')
        await asyncio.sleep(6)
        nick()

        keyboard = {
            "one_time": True,
            "buttons": [
                [{
                        "action": {
                            "type": "text",
                            "label": "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
                        },
                        "color": "secondary"
                    }
                ]
            ]
        }
        keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
        keyboard = str(keyboard.decode('utf-8'))

        upload_photo('–∑–∞–≥—Ä—É–∂–µ–Ω–æ.jpg')
        
        send(id, '–•–æ—Ä–æ—à–æ, —Ç–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ (–µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–æ, –ø—Ä–æ—Å—Ç–∏)')

        users_id += id
        balance[id] = 0
        admins = 'no'
        cities[id] = '—Ä–æ–¥–Ω–∞—è –¥–µ—Ä–µ–≤–Ω—è'
        houses[id] = '—É–ª–∏—Ü–∞'







async def shop():

    start = time.time() # –≤–æ —Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –∑–∞—à–µ–ª –≤ –º–∞–≥–∞–∑–∏–Ω



    if cities[id] == '—Ä–æ–¥–Ω–∞—è –¥–µ—Ä–µ–≤–Ω—è':
        keyboard = {
            "one_time": True,
            "buttons": [
                [{
                        "action": {
                            "type": "text",
                            "label": '–≠–ª–µ–∫—Ç—Ä–æ—Ç–æ–≤–∞—Ä—ã'
                        },
                        "color": "secondary"
                    },
                    {
                        "action": {
                            "type": "text",
                            "label": "PCStore"
                        },
                        "color": "secondary"
                    }],
                    [{
                        "action": {
                            "type": "text",
                            "label": "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
                        },
                        "color": "primary"
                    }
                ]
            ]
        }
        keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
        keyboard = str(keyboard.decode('utf-8'))

        photo = None

        send(id, '–í –∫–∞–∫–æ–π –º–∞–≥–∞–∑–∏–Ω –ø–æ–π–¥–µ–º?')

        msg = None

        for event2 in longpoll.listen():
            await asyncio.sleep(0.5)
            if time.time() - start >= 45:
                if event2.user_id != id:
                    send(event2.user_id, 'üòï –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')

                send(id, '–ü—Ä–æ—Å—Ç–∏, –Ω–æ —Ç—ã —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –¥—É–º–∞–ª, –∏ –º–Ω–µ –ø—Ä–∏—à–ª–æ—Å—å –ø—Ä–µ–Ω–µ—Å—Ç–∏ —Ç–µ–±—è –≤ –≥–º((((((')
                gm()

                end = time.time()         
                print(end-start)

                break
            if event2.type == VkEventType.MESSAGE_NEW:
                if event2.from_user and not (event2.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                    msg = event2.text
                    check = 1
                    if id == event2.user_id:

                        if msg == '–≠–ª–µ–∫—Ç—Ä–æ—Ç–æ–≤–∞—Ä—ã':

                            photo = None
                            keyboard = {
                                "one_time": True,
                                "buttons": [
                                    [{
                                            "action": {
                                                "type": "text",
                                                "label": "–ö–∞–º–µ—Ä—ã"
                                            },
                                            "color": "secondary"
                                        },
                                        {
                                            "action": {
                                                "type": "text",
                                                "label": "–ú–∏–∫—Ä–æ—Ñ–æ–Ω—ã"
                                            },
                                            "color": "secondary"
                                        },
                                        {
                                            "action": {
                                                "type": "text",
                                                "label": "–ú—ã—à–∫–∏"
                                            },
                                            "color": "secondary"
                                        }],
                                        [{
                                            "action": {
                                                "type": "text",
                                                "label": "–ú–æ–Ω–∏—Ç–æ—Ä—ã"
                                            },
                                            "color": "secondary"
                                        },
                                        {
                                            "action": {
                                                "type": "text",
                                                "label": "–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã"
                                            },
                                            "color": "secondary"
                                        }],
                                        [{
                                            "action": {
                                                "type": "text",
                                                "label": "–ù–∞–∑–∞–¥"
                                            },
                                            "color": "primary"

                                        }
                                    ]
                                ]
                            }

                            keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                            keyboard = str(keyboard.decode('utf-8'))
                            send(id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –≠–ª–µ–∫—Ç—Ä–æ—Ç–æ–≤–∞—Ä–æ–≤!\n–í—ã–±–∏—Ä–∞–π —á—Ç–æ —Ö–æ—á–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏!')

                            for event in longpoll.listen():
                                await asyncio.sleep(0.5)
                                if time.time()-start >= 45:
                                    if event.user_id != id:
                                        send(event.user_id, 'üòï –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
                                        break
                                if event.type == VkEventType.MESSAGE_NEW:
                                    if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                                        msg = event.text
                                        check = 1
                                        if id == event.user_id:

                                            if msg == '–ù–∞–∑–∞–¥':
                                                keyboard = {
                                                    "one_time": True,
                                                    "buttons": [
                                                        [{
                                                                "action": {
                                                                    "type": "text",
                                                                    "label": '–≠–ª–µ–∫—Ç—Ä–æ—Ç–æ–≤–∞—Ä—ã'
                                                                },
                                                                "color": "secondary"
                                                            },
                                                            {
                                                                "action": {
                                                                    "type": "text",
                                                                    "label": "PCStore"
                                                                },
                                                                "color": "secondary"
                                                            }],
                                                            [{
                                                                "action": {
                                                                    "type": "text",
                                                                    "label": "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
                                                                },
                                                                "color": "primary"
                                                            }
                                                        ]
                                                    ]
                                                }
                                                keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                keyboard = str(keyboard.decode('utf-8'))

                                                photo = None

                                                send(id, '–í –∫–∞–∫–æ–π –º–∞–≥–∞–∑–∏–Ω –ø–æ–π–¥–µ–º?')
                                                break


                                            elif msg == '–ö–∞–º–µ—Ä—ã':

                                                keyboard = {"one_time": True, "buttons": list(range(0, len(cameras_rodnayaDerevnya) + 1))}
                                                
                                                score = 0
                                                for item in cameras_rodnayaDerevnya:
                                                    keyboard["buttons"][score] = [{"action": {"type": "text","label": item},"color": "secondary"}]
                                                    score += 1

                                                keyboard["buttons"][score] = [{"action": {"type": "text","label": "–ù–∞–∑–∞–¥"},"color": "primary"}]

                                                keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                keyboard = str(keyboard.decode('utf-8'))

                                                send(id, '–í–æ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—ç–±–∫–∏:')

                                                for event in longpoll.listen():
                                                    await asyncio.sleep(0.5)
                                                    if time.time()-start >= 45:
                                                        if event.user_id != id:
                                                            send(event.user_id, 'üòï –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
                                                        break
                                                    if event.type == VkEventType.MESSAGE_NEW:
                                                        if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                                                            msg = event.text
                                                            if id == event.user_id:
                                                                if msg in cameras_rodnayaDerevnya:
                                                                    item = msg
                                                                    keyboard = {
                                                                        "one_time": True,
                                                                        "buttons": [
                                                                            [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ö—É–ø–∏—Ç—å"
                                                                                    },
                                                                                    "color": "positive"
                                                                                }],
                                                                                [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ù–∞–∑–∞–¥"
                                                                                    },
                                                                                    "color": "primary"
                                                                                }
                                                                            ]
                                                                                
                                                                        ]
                                                                    }

                                                                    keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                    keyboard = str(keyboard.decode('utf-8'))

                                                                    send(id, '–ù–∞–∑–≤–∞–Ω–∏–µ: ' + msg + '\n –¶–µ–Ω–∞: ' + str(cameras_rodnayaDerevnya[msg]['cost']) + '\n —É—Å–∏–ª–µ–Ω–∏–µ: ' + str(cameras_rodnayaDerevnya[msg]['gain']))
                                                                    
                                                                    for event in longpoll.listen():
                                                                        await asyncio.sleep(0.5)
                                                                        if time.time()-start >= 45:
                                                                            if event.user_id != id:
                                                                                send(event.user_id, 'üòï –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
                                                                            break
                                                                        if event.type == VkEventType.MESSAGE_NEW:
                                                                            if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                                                                                msg = event.text
                                                                                if id == event.user_id:
                                                                                    if msg == '–ö—É–ø–∏—Ç—å':
                                                                                        if balance[id] >= cameras_rodnayaDerevnya[item]['cost']:
                                                                                            inventory[id]['camera']['name'] = item
                                                                                            inventory[id]['camera']['cost'] = cameras_rodnayaDerevnya[item]['cost'] / 2
                                                                                            inventory[id]['camera']['gain'] = cameras_rodnayaDerevnya[item]['gain']
                                                                                            inventory[id]['camera']['photo'] = cameras_rodnayaDerevnya[item]['photo']
                                                                                            balance[id] -= cameras_rodnayaDerevnya[item]['cost']
                                                                                            
                                                                                            keyboard = {
                                                                                                "one_time": True,
                                                                                                "buttons": [
                                                                                                    [{
                                                                                                            "action": {
                                                                                                                "type": "text",
                                                                                                                "label": "–ù–∞–∑–∞–¥"
                                                                                                            },
                                                                                                            "color": "primary"
                                                                                                        }
                                                                                                    ]
                                                                                                ]
                                                                                            }

                                                                                            keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                            keyboard = str(keyboard.decode('utf-8'))

                                                                                            photo = 'photo-198179933_457239072%2Falbum-198179933_277009630'

                                                                                            send(id, '–¢—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª ' + item + '!')
                                                                                            break

                                                                                        else:
                                                                                            keyboard = {
                                                                                                "one_time": True,
                                                                                                "buttons": [
                                                                                                    [{
                                                                                                            "action": {
                                                                                                                "type": "text",
                                                                                                                "label": "–ù–∞–∑–∞–¥"
                                                                                                            },
                                                                                                            "color": "primary"
                                                                                                        }
                                                                                                    ]
                                                                                                ]
                                                                                            }

                                                                                            keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                            keyboard = str(keyboard.decode('utf-8'))

                                                                                            photo = 'photo-198179933_457239097'

                                                                                            send(id, 'üò´–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! \nüí∞–ë–∞–ª–∞–Ω—Å:'+ str(balance[id]))













                                                                                    elif msg == '–ù–∞–∑–∞–¥':
                                                                                        keyboard = {"one_time": True, "buttons": list(range(0, len(cameras_rodnayaDerevnya) + 1))}
                                                
                                                                                        score = 0
                                                                                        for item in cameras_rodnayaDerevnya:
                                                                                            keyboard["buttons"][score] = [{"action": {"type": "text","label": item},"color": "secondary"}]
                                                                                            score += 1

                                                                                        keyboard["buttons"][score] = [{"action": {"type": "text","label": "–ù–∞–∑–∞–¥"},"color": "primary"}]

                                                                                        keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                        keyboard = str(keyboard.decode('utf-8'))

                                                                                        send(id, '–í–æ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—ç–±–∫–∏:')
                                                                                        break




                                                                elif msg == '–ù–∞–∑–∞–¥':
                                                                    photo = None
                                                                    keyboard = {
                                                                        "one_time": True,
                                                                        "buttons": [
                                                                            [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ö–∞–º–µ—Ä—ã"
                                                                                    },
                                                                                    "color": "secondary"
                                                                                },
                                                                                {
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ú–∏–∫—Ä–æ—Ñ–æ–Ω—ã"
                                                                                    },
                                                                                    "color": "secondary"
                                                                                }],
                                                                                [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ù–∞–∑–∞–¥"
                                                                                    },
                                                                                    "color": "primary"

                                                                                }
                                                                            ]
                                                                        ]
                                                                    }

                                                                    keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                    keyboard = str(keyboard.decode('utf-8'))
                                                                    send(id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –≠–ª–µ–∫—Ç—Ä–æ—Ç–æ–≤–∞—Ä–æ–≤!\n–í—ã–±–∏—Ä–∞–π —á—Ç–æ —Ö–æ—á–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏!')
                                                                    break



                                                                else:
                                                                    send(id, '–î—É—Ä–∞–∫?')











                                            elif msg == '–ú–∏–∫—Ä–æ—Ñ–æ–Ω—ã':

                                                keyboard = {"one_time": True, "buttons": list(range(0, len(microphone_rodnayaDerevnya) + 1))}
                                                
                                                score = 0
                                                for item in microphone_rodnayaDerevnya:
                                                    keyboard["buttons"][score] = [{"action": {"type": "text","label": item},"color": "secondary"}]
                                                    score += 1

                                                keyboard["buttons"][score] = [{"action": {"type": "text","label": "–ù–∞–∑–∞–¥"},"color": "primary"}]

                                                keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                keyboard = str(keyboard.decode('utf-8'))

                                                send(id, '–í–æ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω—ã:')

                                                for event in longpoll.listen():
                                                    await asyncio.sleep(0.5)
                                                    if time.time()-start >= 45:
                                                        if event.user_id != id:
                                                            send(event.user_id, 'üòï –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
                                                        break
                                                    if event.type == VkEventType.MESSAGE_NEW:
                                                        if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                                                            msg = event.text
                                                            if id == event.user_id:
                                                                if msg in microphone_rodnayaDerevnya:
                                                                    item = msg
                                                                    keyboard = {
                                                                        "one_time": True,
                                                                        "buttons": [
                                                                            [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ö—É–ø–∏—Ç—å"
                                                                                    },
                                                                                    "color": "positive"
                                                                                }],
                                                                                [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ù–∞–∑–∞–¥"
                                                                                    },
                                                                                    "color": "primary"
                                                                                }
                                                                            ]
                                                                                
                                                                        ]
                                                                    }

                                                                    keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                    keyboard = str(keyboard.decode('utf-8'))

                                                                    send(id, '–ù–∞–∑–≤–∞–Ω–∏–µ: ' + msg + '\n –¶–µ–Ω–∞: ' + str(microphone_rodnayaDerevnya[msg]['cost']) + '\n —É—Å–∏–ª–µ–Ω–∏–µ: ' + str(microphone_rodnayaDerevnya[msg]['gain']))
                                                                    
                                                                    for event in longpoll.listen():
                                                                        await asyncio.sleep(0.5)
                                                                        if time.time()-start >= 45:
                                                                            if event.user_id != id:
                                                                                send(event.user_id, 'üòï –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
                                                                            break
                                                                        if event.type == VkEventType.MESSAGE_NEW:
                                                                            if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                                                                                msg = event.text
                                                                                if id == event.user_id:
                                                                                    if msg == '–ö—É–ø–∏—Ç—å':
                                                                                        if balance[id] >= microphone_rodnayaDerevnya[item]['cost']:
                                                                                            inventory[id]['microphone']['name'] = item
                                                                                            inventory[id]['microphone']['cost'] = microphone_rodnayaDerevnya[item]['cost'] / 2
                                                                                            inventory[id]['microphone']['gain'] = microphone_rodnayaDerevnya[item]['gain']
                                                                                            inventory[id]['microphone']['photo'] = microphone_rodnayaDerevnya[item]['photo']
                                                                                            balance[id] -= microphone_rodnayaDerevnya[item]['cost']
                                                                                            
                                                                                            keyboard = {
                                                                                                "one_time": True,
                                                                                                "buttons": [
                                                                                                    [{
                                                                                                            "action": {
                                                                                                                "type": "text",
                                                                                                                "label": "–ù–∞–∑–∞–¥"
                                                                                                            },
                                                                                                            "color": "primary"
                                                                                                        }
                                                                                                    ]
                                                                                                ]
                                                                                            }

                                                                                            keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                            keyboard = str(keyboard.decode('utf-8'))

                                                                                            photo = 'photo-198179933_457239072%2Falbum-198179933_277009630'

                                                                                            send(id, '–¢—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª ' + item + '!')
                                                                                            break


                                                                                        else:
                                                                                            keyboard = {
                                                                                                "one_time": True,
                                                                                                "buttons": [
                                                                                                    [{
                                                                                                            "action": {
                                                                                                                "type": "text",
                                                                                                                "label": "–ù–∞–∑–∞–¥"
                                                                                                            },
                                                                                                            "color": "primary"
                                                                                                        }
                                                                                                    ]
                                                                                                ]
                                                                                            }

                                                                                            keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                            keyboard = str(keyboard.decode('utf-8'))

                                                                                            photo = 'photo-198179933_457239097'

                                                                                            send(id, 'üò´–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! \nüí∞–ë–∞–ª–∞–Ω—Å:'+ str(balance[id]))










                                                                                    elif msg == '–ù–∞–∑–∞–¥':
                                                                                        keyboard = {"one_time": True, "buttons": list(range(0, len(microphone_rodnayaDerevnya) + 1))}
                                                
                                                                                        score = 0
                                                                                        for item in microphone_rodnayaDerevnya:
                                                                                            keyboard["buttons"][score] = [{"action": {"type": "text","label": item},"color": "secondary"}]
                                                                                            score += 1

                                                                                        keyboard["buttons"][score] = [{"action": {"type": "text","label": "–ù–∞–∑–∞–¥"},"color": "primary"}]

                                                                                        keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                        keyboard = str(keyboard.decode('utf-8'))

                                                                                        send(id, '–í–æ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—ç–±–∫–∏:')
                                                                                        break




                                                                elif msg == '–ù–∞–∑–∞–¥':
                                                                    photo = None
                                                                    keyboard = {
                                                                        "one_time": True,
                                                                        "buttons": [
                                                                            [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ö–∞–º–µ—Ä—ã"
                                                                                    },
                                                                                    "color": "secondary"
                                                                                },
                                                                                {
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ú–∏–∫—Ä–æ—Ñ–æ–Ω—ã"
                                                                                    },
                                                                                    "color": "secondary"
                                                                                }],
                                                                                [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ù–∞–∑–∞–¥"
                                                                                    },
                                                                                    "color": "primary"

                                                                                }
                                                                            ]
                                                                        ]
                                                                    }

                                                                    keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                    keyboard = str(keyboard.decode('utf-8'))
                                                                    send(id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –≠–ª–µ–∫—Ç—Ä–æ—Ç–æ–≤–∞—Ä–æ–≤!\n–í—ã–±–∏—Ä–∞–π —á—Ç–æ —Ö–æ—á–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏!')
                                                                    break



                                                                else:
                                                                    send(id, '–î—É—Ä–∞–∫?')











                                            elif msg == '–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã':

                                                keyboard = {"one_time": True, "buttons": list(range(0, len(keyboard_rodnayaDerevnya) + 1))}
                                                
                                                score = 0
                                                for item in keyboard_rodnayaDerevnya:
                                                    keyboard["buttons"][score] = [{"action": {"type": "text","label": item},"color": "secondary"}]
                                                    score += 1

                                                keyboard["buttons"][score] = [{"action": {"type": "text","label": "–ù–∞–∑–∞–¥"},"color": "primary"}]

                                                keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                keyboard = str(keyboard.decode('utf-8'))

                                                send(id, '–í–æ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω—ã:')

                                                for event in longpoll.listen():
                                                    await asyncio.sleep(0.5)
                                                    if time.time()-start >= 45:
                                                        if event.user_id != id:
                                                            send(event.user_id, 'üòï –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
                                                        break
                                                    if event.type == VkEventType.MESSAGE_NEW:
                                                        if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                                                            msg = event.text
                                                            if id == event.user_id:
                                                                if msg in keyboard_rodnayaDerevnya:
                                                                    item = msg
                                                                    keyboard = {
                                                                        "one_time": True,
                                                                        "buttons": [
                                                                            [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ö—É–ø–∏—Ç—å"
                                                                                    },
                                                                                    "color": "positive"
                                                                                }],
                                                                                [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ù–∞–∑–∞–¥"
                                                                                    },
                                                                                    "color": "primary"
                                                                                }
                                                                            ]
                                                                                
                                                                        ]
                                                                    }

                                                                    keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                    keyboard = str(keyboard.decode('utf-8'))

                                                                    send(id, '–ù–∞–∑–≤–∞–Ω–∏–µ: ' + msg + '\n –¶–µ–Ω–∞: ' + str(keyboard_rodnayaDerevnya[msg]['cost']) + '\n —É—Å–∏–ª–µ–Ω–∏–µ: ' + str(keyboard_rodnayaDerevnya[msg]['gain']))
                                                                    
                                                                    for event in longpoll.listen():
                                                                        await asyncio.sleep(0.5)
                                                                        if time.time()-start >= 45:
                                                                            if event.user_id != id:
                                                                                send(event.user_id, 'üòï –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
                                                                            break
                                                                        if event.type == VkEventType.MESSAGE_NEW:
                                                                            if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                                                                                msg = event.text
                                                                                if id == event.user_id:
                                                                                    if msg == '–ö—É–ø–∏—Ç—å':
                                                                                        if balance[id] >= keyboard_rodnayaDerevnya[item]['cost']:
                                                                                            inventory[id]['keyboard']['name'] = item
                                                                                            inventory[id]['keyboard']['cost'] = keyboard_rodnayaDerevnya[item]['cost'] / 2
                                                                                            inventory[id]['keyboard']['gain'] = keyboard_rodnayaDerevnya[item]['gain']
                                                                                            inventory[id]['keyboard']['photo'] = keyboard_rodnayaDerevnya[item]['photo']
                                                                                            balance[id] -= keyboard_rodnayaDerevnya[item]['cost']
                                                                                            
                                                                                            keyboard = {
                                                                                                "one_time": True,
                                                                                                "buttons": [
                                                                                                    [{
                                                                                                            "action": {
                                                                                                                "type": "text",
                                                                                                                "label": "–ù–∞–∑–∞–¥"
                                                                                                            },
                                                                                                            "color": "primary"
                                                                                                        }
                                                                                                    ]
                                                                                                ]
                                                                                            }

                                                                                            keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                            keyboard = str(keyboard.decode('utf-8'))

                                                                                            photo = 'photo-198179933_457239072%2Falbum-198179933_277009630'

                                                                                            send(id, '–¢—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª ' + item + '!')
                                                                                            break


                                                                                        else:
                                                                                            keyboard = {
                                                                                                "one_time": True,
                                                                                                "buttons": [
                                                                                                    [{
                                                                                                            "action": {
                                                                                                                "type": "text",
                                                                                                                "label": "–ù–∞–∑–∞–¥"
                                                                                                            },
                                                                                                            "color": "primary"
                                                                                                        }
                                                                                                    ]
                                                                                                ]
                                                                                            }

                                                                                            keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                            keyboard = str(keyboard.decode('utf-8'))

                                                                                            photo = 'photo-198179933_457239097'

                                                                                            send(id, 'üò´–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! \nüí∞–ë–∞–ª–∞–Ω—Å:'+ str(balance[id]))












                                                                                    elif msg == '–ù–∞–∑–∞–¥':
                                                                                        keyboard = {"one_time": True, "buttons": list(range(0, len(keyboard_rodnayaDerevnya) + 1))}
                                                
                                                                                        score = 0
                                                                                        for item in keyboard_rodnayaDerevnya:
                                                                                            keyboard["buttons"][score] = [{"action": {"type": "text","label": item},"color": "secondary"}]
                                                                                            score += 1

                                                                                        keyboard["buttons"][score] = [{"action": {"type": "text","label": "–ù–∞–∑–∞–¥"},"color": "primary"}]

                                                                                        keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                        keyboard = str(keyboard.decode('utf-8'))

                                                                                        send(id, '–í–æ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—ç–±–∫–∏:')
                                                                                        break




                                                                elif msg == '–ù–∞–∑–∞–¥':
                                                                    photo = None
                                                                    keyboard = {
                                                                        "one_time": True,
                                                                        "buttons": [
                                                                            [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ö–∞–º–µ—Ä—ã"
                                                                                    },
                                                                                    "color": "secondary"
                                                                                },
                                                                                {
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ú–∏–∫—Ä–æ—Ñ–æ–Ω—ã"
                                                                                    },
                                                                                    "color": "secondary"
                                                                                }],
                                                                                [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ù–∞–∑–∞–¥"
                                                                                    },
                                                                                    "color": "primary"

                                                                                }
                                                                            ]
                                                                        ]
                                                                    }

                                                                    keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                    keyboard = str(keyboard.decode('utf-8'))
                                                                    send(id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –≠–ª–µ–∫—Ç—Ä–æ—Ç–æ–≤–∞—Ä–æ–≤!\n–í—ã–±–∏—Ä–∞–π —á—Ç–æ —Ö–æ—á–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏!')
                                                                    break



                                                                else:
                                                                    send(id, '–î—É—Ä–∞–∫?')









                                            elif msg == '–ú—ã—à–∫–∏':

                                                keyboard = {"one_time": True, "buttons": list(range(0, len(mouse_rodnayaDerevnya) + 1))}
                                                
                                                score = 0
                                                for item in mouse_rodnayaDerevnya:
                                                    keyboard["buttons"][score] = [{"action": {"type": "text","label": item},"color": "secondary"}]
                                                    score += 1

                                                keyboard["buttons"][score] = [{"action": {"type": "text","label": "–ù–∞–∑–∞–¥"},"color": "primary"}]

                                                keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                keyboard = str(keyboard.decode('utf-8'))

                                                send(id, '–í–æ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º—ã—à–∫–∏:')

                                                for event in longpoll.listen():
                                                    await asyncio.sleep(0.5)
                                                    if time.time()-start >= 45:
                                                        if event.user_id != id:
                                                            send(event.user_id, 'üòï –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
                                                        break
                                                    if event.type == VkEventType.MESSAGE_NEW:
                                                        if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                                                            msg = event.text
                                                            if id == event.user_id:
                                                                if msg in mouse_rodnayaDerevnya:
                                                                    item = msg
                                                                    keyboard = {
                                                                        "one_time": True,
                                                                        "buttons": [
                                                                            [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ö—É–ø–∏—Ç—å"
                                                                                    },
                                                                                    "color": "positive"
                                                                                }],
                                                                                [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ù–∞–∑–∞–¥"
                                                                                    },
                                                                                    "color": "primary"
                                                                                }
                                                                            ]
                                                                                
                                                                        ]
                                                                    }

                                                                    keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                    keyboard = str(keyboard.decode('utf-8'))

                                                                    send(id, '–ù–∞–∑–≤–∞–Ω–∏–µ: ' + msg + '\n –¶–µ–Ω–∞: ' + str(mouse_rodnayaDerevnya[msg]['cost']) + '\n —É—Å–∏–ª–µ–Ω–∏–µ: ' + str(mouse_rodnayaDerevnya[msg]['gain']))
                                                                    
                                                                    for event in longpoll.listen():
                                                                        await asyncio.sleep(0.5)
                                                                        if time.time()-start >= 45:
                                                                            if event.user_id != id:
                                                                                send(event.user_id, 'üòï –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
                                                                            break
                                                                        if event.type == VkEventType.MESSAGE_NEW:
                                                                            if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                                                                                msg = event.text
                                                                                if id == event.user_id:
                                                                                    if msg == '–ö—É–ø–∏—Ç—å':
                                                                                        if balance[id] >= mouse_rodnayaDerevnya[item]['cost']:
                                                                                            inventory[id]['mouse']['name'] = item
                                                                                            inventory[id]['mouse']['cost'] = mouse_rodnayaDerevnya[item]['cost'] / 2
                                                                                            inventory[id]['mouse']['gain'] = mouse_rodnayaDerevnya[item]['gain']
                                                                                            inventory[id]['mouse']['photo'] = mouse_rodnayaDerevnya[item]['photo']
                                                                                            balance[id] -= mouse_rodnayaDerevnya[item]['cost']
                                                                                            
                                                                                            keyboard = {
                                                                                                "one_time": True,
                                                                                                "buttons": [
                                                                                                    [{
                                                                                                            "action": {
                                                                                                                "type": "text",
                                                                                                                "label": "–ù–∞–∑–∞–¥"
                                                                                                            },
                                                                                                            "color": "primary"
                                                                                                        }
                                                                                                    ]
                                                                                                ]
                                                                                            }

                                                                                            keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                            keyboard = str(keyboard.decode('utf-8'))

                                                                                            photo = 'photo-198179933_457239072%2Falbum-198179933_277009630'

                                                                                            send(id, '–¢—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª ' + item + '!')
                                                                                            break


                                                                                        else:
                                                                                            keyboard = {
                                                                                                "one_time": True,
                                                                                                "buttons": [
                                                                                                    [{
                                                                                                            "action": {
                                                                                                                "type": "text",
                                                                                                                "label": "–ù–∞–∑–∞–¥"
                                                                                                            },
                                                                                                            "color": "primary"
                                                                                                        }
                                                                                                    ]
                                                                                                ]
                                                                                            }

                                                                                            keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                            keyboard = str(keyboard.decode('utf-8'))

                                                                                            photo = 'photo-198179933_457239097'

                                                                                            send(id, 'üò´–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! \nüí∞–ë–∞–ª–∞–Ω—Å:'+ str(balance[id]))












                                                                                    elif msg == '–ù–∞–∑–∞–¥':
                                                                                        keyboard = {"one_time": True, "buttons": list(range(0, len(mouse_rodnayaDerevnya) + 1))}
                                                
                                                                                        score = 0
                                                                                        for item in mouse_rodnayaDerevnya:
                                                                                            keyboard["buttons"][score] = [{"action": {"type": "text","label": item},"color": "secondary"}]
                                                                                            score += 1

                                                                                        keyboard["buttons"][score] = [{"action": {"type": "text","label": "–ù–∞–∑–∞–¥"},"color": "primary"}]

                                                                                        keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                        keyboard = str(keyboard.decode('utf-8'))

                                                                                        send(id, '–í–æ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—ç–±–∫–∏:')
                                                                                        break




                                                                elif msg == '–ù–∞–∑–∞–¥':
                                                                    photo = None
                                                                    keyboard = {
                                                                        "one_time": True,
                                                                        "buttons": [
                                                                            [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ö–∞–º–µ—Ä—ã"
                                                                                    },
                                                                                    "color": "secondary"
                                                                                },
                                                                                {
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ú–∏–∫—Ä–æ—Ñ–æ–Ω—ã"
                                                                                    },
                                                                                    "color": "secondary"
                                                                                }],
                                                                                [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ù–∞–∑–∞–¥"
                                                                                    },
                                                                                    "color": "primary"

                                                                                }
                                                                            ]
                                                                        ]
                                                                    }

                                                                    keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                    keyboard = str(keyboard.decode('utf-8'))
                                                                    send(id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –≠–ª–µ–∫—Ç—Ä–æ—Ç–æ–≤–∞—Ä–æ–≤!\n–í—ã–±–∏—Ä–∞–π —á—Ç–æ —Ö–æ—á–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏!')
                                                                    break



                                                                else:
                                                                    send(id, '–î—É—Ä–∞–∫?')








                                            elif msg == '–ú–æ–Ω–∏—Ç–æ—Ä—ã':

                                                keyboard = {"one_time": True, "buttons": list(range(0, len(monitor_rodnayaDerevnya) + 1))}
                                                
                                                score = 0
                                                for item in monitor_rodnayaDerevnya:
                                                    keyboard["buttons"][score] = [{"action": {"type": "text","label": item},"color": "secondary"}]
                                                    score += 1

                                                keyboard["buttons"][score] = [{"action": {"type": "text","label": "–ù–∞–∑–∞–¥"},"color": "primary"}]

                                                keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                keyboard = str(keyboard.decode('utf-8'))

                                                send(id, '–í–æ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–Ω–∏—Ç–æ—Ä—ã:')

                                                for event in longpoll.listen():
                                                    await asyncio.sleep(0.5)
                                                    if time.time()-start >= 45:
                                                        if event.user_id != id:
                                                            send(event.user_id, 'üòï –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
                                                        break
                                                    if event.type == VkEventType.MESSAGE_NEW:
                                                        if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                                                            msg = event.text
                                                            if id == event.user_id:
                                                                if msg in monitor_rodnayaDerevnya:
                                                                    item = msg
                                                                    keyboard = {
                                                                        "one_time": True,
                                                                        "buttons": [
                                                                            [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ö—É–ø–∏—Ç—å"
                                                                                    },
                                                                                    "color": "positive"
                                                                                }],
                                                                                [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ù–∞–∑–∞–¥"
                                                                                    },
                                                                                    "color": "primary"
                                                                                }
                                                                            ]
                                                                                
                                                                        ]
                                                                    }

                                                                    keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                    keyboard = str(keyboard.decode('utf-8'))

                                                                    send(id, '–ù–∞–∑–≤–∞–Ω–∏–µ: ' + msg + '\n –¶–µ–Ω–∞: ' + str(monitor_rodnayaDerevnya[msg]['cost']) + '\n —É—Å–∏–ª–µ–Ω–∏–µ: ' + str(monitor_rodnayaDerevnya[msg]['gain']))
                                                                    
                                                                    for event in longpoll.listen():
                                                                        await asyncio.sleep(0.5)
                                                                        if time.time()-start >= 45:
                                                                            if event.user_id != id:
                                                                                send(event.user_id, 'üòï –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑')
                                                                            break
                                                                        if event.type == VkEventType.MESSAGE_NEW:
                                                                            if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                                                                                msg = event.text
                                                                                if id == event.user_id:
                                                                                    if msg == '–ö—É–ø–∏—Ç—å':
                                                                                        if balance[id] >= monitor_rodnayaDerevnya[item]['cost']:
                                                                                            inventory[id]['monitor']['name'] = item
                                                                                            inventory[id]['monitor']['cost'] = monitor_rodnayaDerevnya[item]['cost'] / 2
                                                                                            inventory[id]['monitor']['gain'] = monitor_rodnayaDerevnya[item]['gain']
                                                                                            inventory[id]['monitor']['photo'] = monitor_rodnayaDerevnya[item]['photo']
                                                                                            balance[id] -= monitor_rodnayaDerevnya[item]['cost']
                                                                                            
                                                                                            keyboard = {
                                                                                                "one_time": True,
                                                                                                "buttons": [
                                                                                                    [{
                                                                                                            "action": {
                                                                                                                "type": "text",
                                                                                                                "label": "–ù–∞–∑–∞–¥"
                                                                                                            },
                                                                                                            "color": "primary"
                                                                                                        }
                                                                                                    ]
                                                                                                ]
                                                                                            }

                                                                                            keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                            keyboard = str(keyboard.decode('utf-8'))

                                                                                            photo = 'photo-198179933_457239072%2Falbum-198179933_277009630'

                                                                                            send(id, '–¢—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª ' + item + '!')
                                                                                            break


                                                                                        else:
                                                                                            keyboard = {
                                                                                                "one_time": True,
                                                                                                "buttons": [
                                                                                                    [{
                                                                                                            "action": {
                                                                                                                "type": "text",
                                                                                                                "label": "–ù–∞–∑–∞–¥"
                                                                                                            },
                                                                                                            "color": "primary"
                                                                                                        }
                                                                                                    ]
                                                                                                ]
                                                                                            }

                                                                                            keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                            keyboard = str(keyboard.decode('utf-8'))

                                                                                            photo = 'photo-198179933_457239097'

                                                                                            send(id, 'üò´–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! \nüí∞–ë–∞–ª–∞–Ω—Å:'+ str(balance[id]))












                                                                                    elif msg == '–ù–∞–∑–∞–¥':
                                                                                        keyboard = {"one_time": True, "buttons": list(range(0, len(monitor_rodnayaDerevnya) + 1))}
                                                
                                                                                        score = 0
                                                                                        for item in monitor_rodnayaDerevnya:
                                                                                            keyboard["buttons"][score] = [{"action": {"type": "text","label": item},"color": "secondary"}]
                                                                                            score += 1

                                                                                        keyboard["buttons"][score] = [{"action": {"type": "text","label": "–ù–∞–∑–∞–¥"},"color": "primary"}]

                                                                                        keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                                        keyboard = str(keyboard.decode('utf-8'))

                                                                                        send(id, '–í–æ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—ç–±–∫–∏:')
                                                                                        break




                                                                elif msg == '–ù–∞–∑–∞–¥':
                                                                    photo = None
                                                                    keyboard = {
                                                                        "one_time": True,
                                                                        "buttons": [
                                                                            [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ö–∞–º–µ—Ä—ã"
                                                                                    },
                                                                                    "color": "secondary"
                                                                                },
                                                                                {
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ú–∏–∫—Ä–æ—Ñ–æ–Ω—ã"
                                                                                    },
                                                                                    "color": "secondary"
                                                                                }],
                                                                                [{
                                                                                    "action": {
                                                                                        "type": "text",
                                                                                        "label": "–ù–∞–∑–∞–¥"
                                                                                    },
                                                                                    "color": "primary"

                                                                                }
                                                                            ]
                                                                        ]
                                                                    }

                                                                    keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                    keyboard = str(keyboard.decode('utf-8'))
                                                                    send(id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –≠–ª–µ–∫—Ç—Ä–æ—Ç–æ–≤–∞—Ä–æ–≤!\n–í—ã–±–∏—Ä–∞–π —á—Ç–æ —Ö–æ—á–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏!')
                                                                    break



                                                                else:
                                                                    send(id, '–î—É—Ä–∞–∫?')



                    


                        elif msg == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                            gm()

                            end = time.time()         
                            print(end-start) #Use then my code

                            break





                        else:
                            print('—Ö–∑ —á–æ –¥–µ–ª–∞—Ç—å!!!!!!!!!111!1!!111')









async def two_maps():

    photo = None
                    
    if cities[id] == '—Ä–æ–¥–Ω–∞—è –¥–µ—Ä–µ–≤–Ω—è':

        keyboard = {
            "one_time": True,
            "buttons": [
                [{
                        "action": {
                            "type": "text",
                            "label": "–ú–æ—Å–∫–≤–∞"
                        },
                        "color": "secondary"
                    }],
                    [{
                        "action": {
                            "type": "text",
                            "label": "–ü–∏—Ç–µ—Ä"
                        },
                        "color": "secondary"
                    }],
                    [{
                        "action": {
                            "type": "text",
                            "label": "–£—Ñ–∞"
                        },
                        "color": "secondary"
                    }],
                    [{
                        "action": {
                            "type": "text",
                            "label": "–ß–µ–ª—è–±–∏–Ω—Å–∫"
                        },
                        "color": "secondary"
                    }],
                    [{
                        "action": {
                            "type": "text",
                            "label": "—Ä–æ–¥–Ω–∞—è –¥–µ—Ä–µ–≤–Ω—è"
                        },
                        "color": "secondary"
                    }],
                    [{
                        "action": {
                            "type": "text",
                            "label": "–ù–∞–∑–∞–¥"
                        },
                        "color": "negative"
                    }
                ]
            ]
        }

        keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
        keyboard = str(keyboard.decode('utf-8'))
        send(id, random.choice(smiles) + random.choice(greetings) + ' ' + str(nicks[id]) + ', —Ç—ã —Å–µ–π—á–∞—Å –≤  –ø–æ—Å–µ–ª–µ–Ω–∏–∏ "' + cities[id] + '! \nüòà–í—ã–±–∏—Ä–∞–π –∫—É–¥–∞ –ø–æ–µ–¥–µ–º?')
    
    else:

        keyboard = {
            "one_time": True,
            "buttons": [
                [{
                        "action": {
                            "type": "text",
                            "label": "–ú–æ—Å–∫–≤–∞"
                        },
                        "color": "secondary"
                    }],
                    [{
                        "action": {
                            "type": "text",
                            "label": "–ü–∏—Ç–µ—Ä"
                        },
                        "color": "secondary"
                    }],
                    [{
                        "action": {
                            "type": "text",
                            "label": "–£—Ñ–∞"
                        },
                        "color": "secondary"
                    }],
                    [{
                        "action": {
                            "type": "text",
                            "label": "–ß–µ–ª—è–±–∏–Ω—Å–∫"
                        },
                        "color": "secondary"
                    }],
                    [{
                        "action": {
                            "type": "text",
                            "label": "—Ä–æ–¥–Ω–∞—è –¥–µ—Ä–µ–≤–Ω—è"
                        },
                        "color": "secondary"
                    }],
                    [{
                        "action": {
                            "type": "text",
                            "label": "–ù–∞–∑–∞–¥"
                        },
                        "color": "negative"
                    }
                ]
            ]
        }

        keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
        keyboard = str(keyboard.decode('utf-8'))

        send(id, random.choice(smiles) + random.choice(greetings) + ' ' + str(nicks[id]) + ', —Ç—ã —Å–µ–π—á–∞—Å –≤  –≥–æ—Ä–æ–¥–µ "' + cities[id] + '"! \nüòà–í—ã–±–∏—Ä–∞–π –∫—É–¥–∞ –ø–æ–µ–¥–µ–º?')










async def workplace():

    photo = 'photo-198179933_457239076'

    keyboard = {
        "one_time": True,
        "buttons": [
            [{
                    "action": {
                        "type": "text",
                        "label": "–ù–∞—á–∞—Ç—å —Å—Ç—Ä–∏–º"
                    },
                    "color": "secondary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å"
                    },
                    "color": "secondary"
                }],
                [{
                    "action": {
                        "type": "text",
                        "label": "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
                    },
                    "color": "primary"
                }
            ]
        ]
    }

    keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
    keyboard = str(keyboard.decode('utf-8'))

    send(id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! —ç—Ç–æ —Ç–≤–æ–µ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ. –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —Ç–≤–æ—Ä–∏—Ç—å –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.')

    for event in longpoll.listen():
        await asyncio.sleep(0.5)
        if event.type == VkEventType.MESSAGE_NEW:
            if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                msg = event.text
                check = 1
                if id == event.user_id:
                    if msg == '–ù–∞—á–∞—Ç—å —Å—Ç—Ä–∏–º':
                        pass






                    elif msg == '–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å':
                        photo = None
                        keyboard = {"one_time": True, "buttons": list(range(0, len(inventory[id]) + 1))}
                        score = 0
                        for item in inventory[id]:
                            keyboard["buttons"][score] = [{"action": {"type": "text","label": item},"color": "secondary"}]
                            score += 1

                        keyboard["buttons"][score] = [{"action": {"type": "text","label": "–ù–∞–∑–∞–¥"},"color": "primary"}]

                        keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                        keyboard = str(keyboard.decode('utf-8'))
                        send(id, '–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ–≥–æ —Ç–æ–≥–æ, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å:')
                        
                        for event in longpoll.listen():
                            await asyncio.sleep(0.5)
                            if event.type == VkEventType.MESSAGE_NEW:
                                if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                                    msg = event.text
                                    check = 1
                                    if id == event.user_id:
                                        if msg in list(inventory[id]):
                                            item = msg
                                            photo = inventory[id][item]['photo']
                                            keyboard = {
                                                "one_time": True,
                                                "buttons": [
                                                    [{
                                                            "action": {
                                                                "type": "text",
                                                                "label": "–ø—Ä–æ–¥–∞—Ç—å"
                                                            },
                                                            "color": "secondary"
                                                        }],
                                                        [{
                                                            "action": {
                                                                "type": "text",
                                                                "label": "–ù–∞–∑–∞–¥"
                                                            },
                                                            "color": "primary"
                                                        }
                                                    ]
                                                ]
                                            }

                                            keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                            keyboard = str(keyboard.decode('utf-8'))

                                            send(id, '–í–æ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–≤–æ–µ–≥–æ ' + inventory[id][item]['name'] + ':\n–¶–µ–Ω–∞ - ' + str(inventory[id][item]['cost'])+ '\n–£—Å–∏–ª–µ–Ω–∏–µ - ' + str(inventory[id][item]['gain']))

                                            for event in longpoll.listen():
                                                await asyncio.sleep(0.5)
                                                if event.type == VkEventType.MESSAGE_NEW:
                                                    if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞
                                                        msg = event.text
                                                        check = 1
                                                        if id == event.user_id:
                                                            if msg == '–ø—Ä–æ–¥–∞—Ç—å':
                                                                photo = 'photo-198179933_457239077'

                                                                keyboard = {
                                                                    "one_time": True,
                                                                    "buttons": [
                                                                        [{
                                                                                "action": {
                                                                                    "type": "text",
                                                                                    "label": "–ù–∞–∑–∞–¥"
                                                                                },
                                                                                "color": "primary"
                                                                            }
                                                                        ]
                                                                    ]
                                                                }

                                                                keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                keyboard = str(keyboard.decode('utf-8'))

                                                                balance[id] += inventory[id][item]['cost']
                                                                inventory[id][item]['cost'] = 0
                                                                inventory[id][item]['gain'] = 0
                                                                inventory[id][item]['photo'] = None

                                                                send(id, '–¢—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–ª ' + inventory[id][item]['name'])
                                                                
                                                                inventory[id][item]['name'] = '–ù–∏—á–µ–≥–æ'



                                                            elif msg == '–ù–∞–∑–∞–¥':
                                                                photo = None
                                                                keyboard = {"one_time": True, "buttons": list(range(0, len(inventory[id]) + 1))}
                                                                score = 0
                                                                for item in inventory[id]:
                                                                    keyboard["buttons"][score] = [{"action": {"type": "text","label": item},"color": "secondary"}]
                                                                    score += 1

                                                                keyboard["buttons"][score] = [{"action": {"type": "text","label": "–ù–∞–∑–∞–¥"},"color": "primary"}]

                                                                keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                                                keyboard = str(keyboard.decode('utf-8'))
                                                                send(id, '–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ–≥–æ —Ç–æ–≥–æ, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å:')
                                                                break



                                        elif msg == '–ù–∞–∑–∞–¥':
                                            photo = 'photo-198179933_457239076'

                                            keyboard = {
                                                "one_time": True,
                                                "buttons": [
                                                    [{
                                                            "action": {
                                                                "type": "text",
                                                                "label": "–ù–∞—á–∞—Ç—å —Å—Ç—Ä–∏–º"
                                                            },
                                                            "color": "secondary"
                                                        }],
                                                        [{
                                                            "action": {
                                                                "type": "text",
                                                                "label": "–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å"
                                                            },
                                                            "color": "secondary"
                                                        }],
                                                        [{
                                                            "action": {
                                                                "type": "text",
                                                                "label": "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
                                                            },
                                                            "color": "primary"
                                                        }
                                                    ]
                                                ]
                                            }

                                            keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
                                            keyboard = str(keyboard.decode('utf-8'))

                                            send(id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! —ç—Ç–æ —Ç–≤–æ–µ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ. –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —Ç–≤–æ—Ä–∏—Ç—å –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.')
                                            break







                    elif msg == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
                        gm()
                        break








# ``````````````````````````````````````````````````````````````````````````````````````````````````````













# ``````````````````````````````–í–´–ì–†–£–ó–ö–ê –í–°–ï–• –ü–ï–†–ï–ú–ï–ù–ù–´–•```````````````````````````````````````````````````````

# –≤—ã–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "–±–∞–ª–∞–Ω—Å" (balance)
file = open(str("balance.txt"), "r", encoding='utf-8')
balance = eval(file.read())
file.close()

    
# –≤—ã–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "–Ω–∏–∫–∏" (nicks)
file = open(str("nicks.txt"), "r", encoding='utf-8')
nicks = eval(file.read())
file.close()


# –≤—ã–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "–∞–¥–º–∏–Ω—ã" (admins)
file = open("admins.txt", "r", encoding='utf-8')
admins = eval(file.read())
file.close()


# –≤—ã–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "–¥–æ–º–∞" (houses)
file = open("houses.txt", "r", encoding='utf-8')
houses = eval(file.read())
file.close()


# –≤—ã–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "—á–µ–∫_—Å—Ç–∞—Ä—Ç" (check_start)
file = open('check_start.txt', 'r', encoding='utf-8')
check_start = eval(file.read())
file.close()


# –≤—ã–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "–≥–æ—Ä–æ–¥–∞" (cities)
file = open('cities.txt', 'r', encoding='utf-8')
cities = eval(file.read())
file.close()

# –≤—ã–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å" (inventory)
file = open(str("inventory.txt"), "r", encoding='utf-8')
inventory = eval(file.read())
file.close()

# `````````````````````````````````````````````````````````````````````````````````````````````










# ````````````````````````````–û–°–ù–û–í–ù–ê–Ø –†–ê–ë–û–¢–ê –ë–û–¢–ê```````````````````````````````````````````````````````

async def main():

    # –°–ª—É—à–∞–µ–º –ª–æ–Ω–≥–ø—É–ª (—Å–æ–±—ã—Ç–∏—è –≤ –±–æ—Ç–µ)
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW: # –ï—Å–ª–∏ –ø—Ä–∏—à–ª–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

            msg = event.text.lower() # —Å–æ–æ–±—â–µ–Ω–∏–µ —ç—Ç–æ...
            id = event.user_id #–∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            #try:

            if event.from_user and not (event.from_me): # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ù–ï –æ—Ç –±–æ—Ç–∞


                if msg[0:10] == '–ø–µ—Ä–µ–≤–µ—Ä–Ω–∏ ':
                    rotateText(msg)


                elif msg[: 9] == '–ø–µ—Ä–µ–≤–µ–¥–∏ ':
                    translateText(msg[9:])

   
                elif msg == '–Ω–∞—á–∞—Ç—å':
                    main_loop.create_task(starting())

                
                elif msg == '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' or msg == '–≥–º':
                    main_loop.create_task(gm())


                elif msg == '–º–∞–≥–∞–∑–∏–Ω':
                    main_loop.create_task(shop())


                elif msg == '–¥—É–±–ª—å –∫–∞—Ä—Ç—ã':
                    main_loop.create_task(two_maps())


                elif msg == '—Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ':
                    main_loop.create_task(workplace())


                elif msg[ : 9] == '—Ä–∞—Å—Å—ã–ª–∫–∞ ':
                    mailing(msg)


                elif msg == '—Å—Ç–æ–ø':
                    break

                else:
                    send(id, '–ù–∞–ø–∏—à–∏ "–ø–æ–º–æ—â—å", —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã')


            save("balance.txt", balance)
            save("nicks.txt", nicks)
            save("admins.txt", admins)
            save("houses.txt", houses)
            save("check_start.txt", check_start)
            save("cities.txt", cities)
            save("inventory.txt", inventory)



            """except Exception as e:
                photo = None
                send(id_admin, '–•—ç–π! —è —Ç—É—Ç —É [id' + str(id) + '|–∏–≥—Ä–æ–∫–∞] –æ—à–∏–±–∫—É —Å–ª–æ–≤–∏–ª! –û–Ω–∞ –∑–≤—É—á–∏—Ç —Ç–∞–∫: \n' + str(e))
                send(id, "–•–º–º... –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ. –ù–µ –≤–æ–ª–Ω—É–π—Å—è, —è —É–∂–µ –Ω–∞–ø–∏—Å–∞–ª –æ–± —ç—Ç–æ–º –∞–¥–º–∏–Ω—É.")"""




main_loop = asyncio.get_event_loop()
main_loop.run_until_complete(main())



#asyncio.run(main())